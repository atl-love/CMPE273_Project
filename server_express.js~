/*var fs = require("fs");
var config = JSON.parse(fs.readFileSync("/Applications/XAMPP/xamppfiles/htdocs/CMPE273_Project/config.json"));
var host = config.host;
var port = config.port;*/
var count = 0;
var host = "127.0.0.1";
var port = "1339";
var express = require("express");
//autocomplete=require('./routes/autocomplete');
var mongo = require("mongodb");
var mongoose = require('mongoose');
var url = require('url');
var numAdv = 0; 
var qualityScore= {};
var adRank = [];
var selectedAdv = 4;
var temp;
var tempId;
var advDetails;
var top30;
var max = 0;
var isTop30 = 0;
var top3Adv = [];
var advToArray;

//var adAuction = require('./js/adauction.js');
//var demoData = angular.module('demoData',[]);
/*var config = {"USER"    : "",
              "PASS"    : "",
              "HOST"    : "ec2-54-187-119-188.us-west-2.compute.amazonaws.com",         
              "PORT"    : "27017",        
              "DATABASE" : "webpage"};
var dbPath  = "mongodb://"+config.USER + ":"+     
				config.PASS + "@"+     
				config.HOST + "/"+     
				config.DATABASE+":"+    
				config.PORT;*/

var app = express();


app.use(app.router);
app.use(express.static(__dirname + "/public"));
app.use(express.bodyParser());
app.use(express.methodOverride());

/*var databaseUrl = "webpage"; // "username:password@example.com/mydb"
var collections = ["advertisement", "scores", "offical_crawl_result"]
var db = require("mongojs").connect(databaseUrl, collections);*/
var mongojs = require('mongojs');//54.187.119.188
var db = mongojs("54.187.119.188/webpage", ["advertisement", "scores", "offical_crawl_result"]);
var JSONStream = require('JSONStream');

app.use(function(req,res,next){
	req.db=db;
	next();
});

  
app.get("/", function(request, response){
	//response.send("hello!");
	response.redirect('CMPE273_Template2.html');
});


//mongoose.connect('mongodb://localhost/webpage');



app.get("/user/id", function(request,response){

});

app.get("/CMPE273_Vickrey/:text", function(request,response){
	response.send("Hello " + request.params.text);	
});


app.get('/advertiserList', function (req, res) {
	console.log("" + db.advertisement.find());
		db.offical_crawl_result.find(function(err, urlLink) {
			if( err || !urlLink) console.log("No  results found");
			else urlLink.forEach(function(advUrls){
		    	console.log(""+advUrls.url);
				res.json(advUrls.url);
			}
		)
	});	
});


app.get('/getangularusers', function (req, res) {
	res.header("Access-Control-Allow-Origin", "http://127.0.0.1:1339");
	res.header("Access-Control-Allow-Methods", "GET, POST");
    // The above 2 lines are required for Cross Domain Communication(Allowing the methods that come as Cross           // Domain Request
	db.advertisement.find('', function(err, users) { // Query in MongoDB via Mongo JS Module
		if( err || !users) console.log("No users found");
		else {
			res.writeHead(200, {'Content-Type': 'application/json'}); // Sending data via json
			str='[';
			users.forEach( function(user) {
				str = str + '{ "advName" : "' + user.advName + '"},' + '{"advLink" : "' + user.advLink + '"},'+ '{"keywords" : "' + user.keywords + '"},\n';
			});
			str = str.trim();
			str = str.substring(0,str.length-1);
			str = str + ']';
			res.end( str);
                // Prepared the jSon Array here
		}
  	});
});

app.post('/insertangularmongouser', function (req, res){
  console.log("POST: ");
  res.header("Access-Control-Allow-Origin", "http://localhost");
  res.header("Access-Control-Allow-Methods", "GET, POST");
  // The above 2 lines are required for Cross Domain Communication(Allowing the methods that come as Cross 
  // Domain Request
  console.log(req.body);
  console.log(req.body.mydata);
  var jsonData = JSON.parse(req.body.mydata);

  db.advertisement.save({advName: jsonData.advName, advLink: jsonData.advLink, keywords: jsonData.keywords, advId: jsonData.advId},
       function(err, saved) { // Query in MongoDB via Mongo JS Module
           if( err || !saved ) res.end( "User not saved"); 
           else {console.log("AdvLink:" + jsonData.advLink); res.end( "User saved")};
       });
});


/*function getAdvertiser(advId,callback){	

db.open(function(error){
	//var db = new mongo.Db("webpage", new mongo.Server(host,port,{}));
	mongoose.connect(dbPath);
		console.log("We are connected! " + host + ":" + port);
	mongoose.model('advertisement', {advName: String});
	app.get('/advName', function(request, response){
		mongoose.model('users').find(function(err,advertisement){
			res.send(advertisement);
		});
	});
		
		/*db.collection("advertisement", function(error, collection){
			console.log("We have the collection");
			collection.find({"advId":101},function(error, cursor){
				cursor.toArray(function(error, advertisements){
					if(advertisements.length == 0){
						callback(false);
						//console.log("No advertiser found");
					} else {
						callback(advertisements[0]);
						//console.log("Found a user", advertisements[0]);
					}
				});
			});
		});*/

/*db.advertisement.find(function(err, users) {
  if( err || !users) console.log("No  users found");
  else users.forEach( function(femaleUser) {
    console.log(femaleUser);
  });
})
)}*/


app.get('/urlCrawl/:advLink', function(req, res) {
	
		res.header("Access-Control-Allow-Origin", "http://127.0.0.1:1339");
		res.header("Access-Control-Allow-Methods", "GET, POST");
		// The above 2 lines are required for Cross Domain Communication(Allowing the methods that come as Cross           // Domain Request
		db.scores.find(function(err, ads) { // Query in MongoDB via Mongo JS Module
			if(err) {console.log(err);}
			else {
				ads.forEach( function(ad) {
					//console.log(adv.aid);
	//		    	numAdv=db.scores.find({did:req.params.advLink}).count();
					numAdv++;
					//console.log("Num: "+numAdv);	
					//advToArray[count++]=ad.did;
					//console.log("url: " + ad.did);
				})
				advToArray = db.scores.find({}).pipe(JSONStream.stringify()).pipe(process.stdout);
				console.log("Advs: "+advToArray.toString());
			}
		});
		
	//console.log("Num adv: " + numAdv);
		
	
	//create array of advertisers for url crawled
	advToArray = db.scores.find( {did: "http://www.cnn.com/"}, {aid:1,p:1,cpc:1}).sort({p:1});//).toArray(function(){});
	//top30 = advToArray.length *.3;
	console.log(""+advToArray.length);
	
	//calculate quality score
	for (var i = 0; i < advToArray.length-1; i++){
	
			//get details for specific advertiser
			tempId = advToArray[i].aid;
			advDetails = db.advertisement.find({advId:103}, {advId:1,cpc:1,advName:1,lastAccessed:1, qualScore:1, adRank:1,lastChargedPrice:1}).toArray();
			
			//determine top 30
			for (var j = 0; j < top30; j++){ if(i<=j){isTop30=1;} else {isTop30=0;}	}
			
			//calculate quality score
			advDetails[i].qualScore = (advDetails.cpc*advToArray[i].p)*.6 + (advDetails[i].lastAccessed/new Date().getTime())*.15 + isTop30*.2;
			
			//calculate adRank
			advDetails[k].adRank = advDetails[k].cpc*advDetails[k].qualScore;
		
		}
		
			//sort array based on quality score
			//advDetails = sortByKey(advDetails, 'adRank'); //-------------------------------------------------
		
		function sortByQualScore(array, rank) {
			return array.sort(function(a, b) {
				var x = a[rank]; var y = b[rank];
				return ((x < y) ? -1 : ((x > y) ? 1 : 0));
			});
		}
		 
		 
		//caclulate cost for ads
		for (var k = 0; k < selectedAdv; k++){
		 
			//adrank person below/quality score +.01
			advDetails[k].lastChargedPrice = advDetails[k+1].adRank/advDetails.qualScore + .01;
			
		}
		
			
				console.log("You sent the name " + req.params.advLink);
				
				res.send('You sent the name "' + req.params.advLink + '".');
});

app.listen(port, host);
console.log("We are connected! " + host + ":" + port);


